trigger:
  batch: true
  branches:
    include:
      - main

pr:
  branches:
    include:
      - main

schedules:
  - cron: '0 0 * * 0'
    displayName: Weekly build
    branches:
      include:
        - main
    always: true

resources:
  repositories:
    - repository: templates
      type: github
      name: osisoft/OSI-Samples
      endpoint: osisoft/OSI-Samples

variables:
  - template: '/miscellaneous/build_templates/variables.yml@templates'
  - name: CredFile
    value: config.js
  - name: CredFileLibrary
    value: product-readiness.omf_dc_nodejs.ocs.js
  - name: CredFileLibraryOP
    value: product-readiness.omf_dc_nodejs.pi.js
  - name: CredFileLibraryEDS
    value: product-readiness.omf_dc_nodejs.eds.js
  - name: analysisProject
    value: OMF_DC_NodeJS

jobs:
  - job: Tests_OCS
    pool:
      name: 00-OSIManaged-Containers
      demands: Agent.OS -equals Windows_NT
    steps:
      - template: '/miscellaneous/build_templates/config.yml@templates'
        parameters:
          fileOriginal: $(CredFile)
          fileLibrary: $(CredFileLibrary)

      - script: npm ci
        displayName: 'Install dependencies'

      - script: npm test
        displayName: 'Run tests'

      - task: PublishTestResults@2
        inputs:
          testResultsFormat: JUnit
          testResultsFiles: '*.xml'
          failTaskOnFailedTests: true
          searchFolder: '$(Build.SourcesDirectory)/TestResults'
          testRunTitle: '$(Agent.JobName) on $(Agent.OS)'
        displayName: 'Publish test results'
        condition: always()

      - template: '/miscellaneous/build_templates/analysis.yml@templates'

  - job: Tests_OnPrem
    pool:
      name: 00-OSIManaged-Test
      demands: COMPUTERNAME -equals $(buildAgent)
    steps:
      - template: '/miscellaneous/build_templates/config.yml@templates'
        parameters:
          fileOriginal: $(CredFile)
          fileLibrary: $(CredFileLibraryOP)

      - task: NodeTool@0
        inputs:
          versionSpec: '10.x'
        displayName: 'Specify Node version'

      - script: npm ci
        displayName: 'Install dependencies'

      - script: npm test
        displayName: 'Run tests'

      - task: PublishTestResults@2
        inputs:
          testResultsFormat: JUnit
          testResultsFiles: '*.xml'
          failTaskOnFailedTests: true
          searchFolder: '$(Build.SourcesDirectory)/TestResults'
          testRunTitle: '$(Agent.JobName) on $(Agent.OS)'
        displayName: 'Publish test results'
        condition: always()

  - job: Tests_EDS
    pool:
      name: 00-OSIManaged-Test
      demands: COMPUTERNAME -equals $(buildAgent)
    steps:
      - template: '/miscellaneous/build_templates/config.yml@templates'
        parameters:
          fileOriginal: $(CredFile)
          fileLibrary: $(CredFileLibraryEDS)

      - task: NodeTool@0
        inputs:
          versionSpec: '10.x'
        displayName: 'Specify Node version'

      - script: ci
        displayName: 'Install dependencies'

      - script: npm test
        displayName: 'Run tests'

      - task: PublishTestResults@2
        inputs:
          testResultsFormat: JUnit
          testResultsFiles: '*.xml'
          failTaskOnFailedTests: true
          searchFolder: '$(Build.SourcesDirectory)/TestResults'
          testRunTitle: '$(Agent.JobName) on $(Agent.OS)'
        displayName: 'Publish test results'
        condition: always()
